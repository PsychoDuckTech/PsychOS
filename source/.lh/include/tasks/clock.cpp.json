{
    "sourceFile": "include/tasks/clock.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1737201741378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1737202373832,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,5 @@\n #include \"clock.h\"\n-#include <freertos/FreeRTOS.h>\n-#include <freertos/task.h>\n \n int hour = 0;\n int minute = 0;\n int second = 0;\n"
                },
                {
                    "date": 1737202433916,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,46 +5,13 @@\n int second = 0;\n \n void clockTask(void *parameters)\n {\n-    bool capsLockStatus = false;\n     bool refreshFlags[3] = {false, false, false}; // [capsLockStatus, hour, minute]\n     Serial.println(\"Clock Task started.\");\n \n     for (;;)\n     {\n-        if (Serial.available())\n-        {\n-            String line = Serial.readStringUntil('\\n');\n-            Serial.println(line);\n-            int comma1 = line.indexOf(',');\n-            int comma2 = line.lastIndexOf(',');\n-            bool newCapsLockStatus = line.substring(0, comma1).toInt() == 1;\n-            int newHour = line.substring(comma1 + 1, comma2).toInt();\n-            int newMinute = line.substring(comma2 + 1).toInt();\n-\n-            if (newCapsLockStatus != capsLockStatus)\n-            {\n-                capsLockStatus = newCapsLockStatus;\n-                refreshFlags[0] = true;\n-            }\n-            if (newHour != hour)\n-            {\n-                hour = newHour;\n-                refreshFlags[1] = true;\n-            }\n-            if (newMinute != minute)\n-            {\n-                minute = newMinute;\n-                refreshFlags[2] = true;\n-            }\n-        }\n-\n-        if (refreshFlags[0] || refreshFlags[1] || refreshFlags[2])\n-        {\n-            refreshFlags[0] = refreshFlags[1] = refreshFlags[2] = false;\n-        }\n-\n         vTaskDelay(1000 / portTICK_PERIOD_MS); // Delay for 1 second\n         second++;\n         if (second >= 60)\n         {\n"
                },
                {
                    "date": 1737202495118,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n int hour = 0;\n int minute = 0;\n int second = 0;\n \n-void clockTask(void *parameters)\n+void clock(void *parameters)\n {\n     bool refreshFlags[3] = {false, false, false}; // [capsLockStatus, hour, minute]\n     Serial.println(\"Clock Task started.\");\n \n"
                }
            ],
            "date": 1737201741378,
            "name": "Commit-0",
            "content": "#include \"clock.h\"\n#include <freertos/FreeRTOS.h>\n#include <freertos/task.h>\n\nint hour = 0;\nint minute = 0;\nint second = 0;\n\nvoid clockTask(void *parameters) {\n    bool capsLockStatus = false;\n    bool refreshFlags[3] = {false, false, false}; // [capsLockStatus, hour, minute]\n    Serial.println(\"Clock Task started.\");\n\n    for (;;) {\n        if (Serial.available()) {\n            String line = Serial.readStringUntil('\\n');\n            Serial.println(line);\n            int comma1 = line.indexOf(',');\n            int comma2 = line.lastIndexOf(',');\n            bool newCapsLockStatus = line.substring(0, comma1).toInt() == 1;\n            int newHour = line.substring(comma1 + 1, comma2).toInt();\n            int newMinute = line.substring(comma2 + 1).toInt();\n\n            if (newCapsLockStatus != capsLockStatus) {\n                capsLockStatus = newCapsLockStatus;\n                refreshFlags[0] = true;\n            }\n            if (newHour != hour) {\n                hour = newHour;\n                refreshFlags[1] = true;\n            }\n            if (newMinute != minute) {\n                minute = newMinute;\n                refreshFlags[2] = true;\n            }\n        }\n\n        if (refreshFlags[0] || refreshFlags[1] || refreshFlags[2]) {\n            refreshFlags[0] = refreshFlags[1] = refreshFlags[2] = false;\n        }\n\n        vTaskDelay(1000 / portTICK_PERIOD_MS); // Delay for 1 second\n        second++;\n        if (second >= 60) {\n            second = 0;\n            minute++;\n            if (minute >= 60) {\n                minute = 0;\n                hour++;\n                if (hour >= 24) {\n                    hour = 0;\n                }\n            }\n        }\n    }\n}"
        }
    ]
}