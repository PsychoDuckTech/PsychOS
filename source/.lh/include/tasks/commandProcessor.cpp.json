{
    "sourceFile": "include/tasks/commandProcessor.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1737286199044,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1737286547183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,7 @@\n #include <Arduino.h>\n+#include \"clock.cpp\"\n \n-extern int hours;\n-extern int minutes;\n-extern int seconds;\n-\n void processCommand(String data)\n {\n     int dotIndex = data.indexOf('.');   // Locate the dot in the command\n     int spaceIndex = data.indexOf(' '); // Locate the space before the value\n@@ -25,9 +22,9 @@\n     if (command == \"time.hours\")\n     {\n         if (value >= 0 && value < 24)\n         {\n-            hours = value;\n+            updateClock(value, -1, -1);\n             Serial.println(\"Hours updated to: \" + String(hours));\n         }\n         else\n         {\n@@ -37,9 +34,9 @@\n     else if (command == \"time.minutes\")\n     {\n         if (value >= 0 && value < 60)\n         {\n-            minutes = value;\n+            updateClock(-1, value, -1);\n             Serial.println(\"Minutes updated to: \" + String(minutes));\n         }\n         else\n         {\n@@ -49,9 +46,9 @@\n     else if (command == \"time.seconds\")\n     {\n         if (value >= 0 && value < 60)\n         {\n-            seconds = value;\n+            updateClock(-1, -1, value);\n             Serial.println(\"Seconds updated to: \" + String(seconds));\n         }\n         else\n         {\n"
                },
                {
                    "date": 1737286705820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n #include <Arduino.h>\n-#include \"clock.cpp\"\n+#include \"clock.h\"\n \n void processCommand(String data)\n {\n     int dotIndex = data.indexOf('.');   // Locate the dot in the command\n"
                }
            ],
            "date": 1737286199044,
            "name": "Commit-0",
            "content": "#include <Arduino.h>\n\nextern int hours;\nextern int minutes;\nextern int seconds;\n\nvoid processCommand(String data) {\n    int dotIndex = data.indexOf('.'); // Locate the dot in the command\n    int spaceIndex = data.indexOf(' '); // Locate the space before the value\n\n    if (dotIndex == -1 || spaceIndex == -1 || spaceIndex < dotIndex) {\n        Serial.println(\"Invalid command format. Use: time.hours <value>\");\n        return;\n    }\n\n    // Extract the command part (e.g., \"time.hours\")\n    String command = data.substring(0, spaceIndex);\n\n    // Extract the value part\n    int value = data.substring(spaceIndex + 1).toInt();\n\n    // Determine which variable to update\n    if (command == \"time.hours\") {\n        if (value >= 0 && value < 24) {\n            hours = value;\n            Serial.println(\"Hours updated to: \" + String(hours));\n        } else {\n            Serial.println(\"Invalid hours value. Must be between 0 and 23.\");\n        }\n    } else if (command == \"time.minutes\") {\n        if (value >= 0 && value < 60) {\n            minutes = value;\n            Serial.println(\"Minutes updated to: \" + String(minutes));\n        } else {\n            Serial.println(\"Invalid minutes value. Must be between 0 and 59.\");\n        }\n    } else if (command == \"time.seconds\") {\n        if (value >= 0 && value < 60) {\n            seconds = value;\n            Serial.println(\"Seconds updated to: \" + String(seconds));\n        } else {\n            Serial.println(\"Invalid seconds value. Must be between 0 and 59.\");\n        }\n    } else {\n        Serial.println(\"Unknown command: \" + command);\n    }\n}\n"
        }
    ]
}