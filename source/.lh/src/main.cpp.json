{
    "sourceFile": "src/main.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1736105663645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1736105782086,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,45 @@\n+#include <Arduino.h>\r\n+#include <ArduinoBLE.h>\r\n+#include \"config.h\"\r\n+#include \"tasks/matrixScan.cpp\"\r\n+#include \"tasks/moduleConnectionHandler.cpp\"\r\n+#include \"tasks/knobHandler.cpp\"\r\n+#include \"utils/initializeMatrix.h\"\r\n+#include \"utils/initializeBLE.h\"\r\n+\r\n+void setup() {\r\n+    Serial.begin(115200);\r\n+    delay(2000); // Delay for the serial monitor to start\r\n+    Serial.println(String(OS_version) + \", \" + byCompany);\r\n+    Serial.println(\"95YCH0DUCK\\n\");\r\n+\r\n+    // Initialize watchdog\r\n+    esp_task_wdt_init(10, true);\r\n+    \r\n+    initializeBLE();\r\n+    initializeMatrix();\r\n+    \r\n+    TaskHandle_t keyTaskHandle;\r\n+    xTaskCreatePinnedToCore(\r\n+        matrixScan,           // Task function: The function that will execute as the task.\r\n+        \"Keystroke Handler\",  // Name of the task: A human-readable name for debugging.\r\n+        8192,                 // Stack size: Amount of stack memory allocated to the task (in bytes).\r\n+        NULL,                 // Task parameters: A pointer to pass to the task function (optional).\r\n+        3,                    // Priority: The priority of the task (higher values = higher priority).\r\n+        &keyTaskHandle,       // Task handle: A pointer to store the task's handle (optional).\r\n+        0                     // Core ID: The CPU core (0 or 1) on which the task will run.\r\n+    );\r\n+\r\n+    TaskHandle_t knobTaskHandle;\r\n+    xTaskCreatePinnedToCore(knobHandler, \"Knob Handler\", 2048, NULL, 1, &knobTaskHandle, 1);\r\n+\r\n+    TaskHandle_t bleTaskHandle;\r\n+    xTaskCreatePinnedToCore(moduleConnectionHandler, \"BLE Handler\", 16384, NULL, 1, &bleTaskHandle, 1);\r\n+\r\n+    TaskHandle_t hostCommHandle;\r\n+    xTaskCreatePinnedToCore(hostCommunicationBridge, \"Host Communication Bridge\", 4096, NULL, 2, &hostCommHandle, 0);\r\n+}\r\n+\r\n+void loop() {\r\n+    // not required due to the use of FreeRTOS tasks\r\n+}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1736105663645,
            "name": "Commit-0",
            "content": "#include <Arduino.h>\r\n#include <ArduinoBLE.h>\r\n#include \"config.h\"\r\n#include \"tasks/matrixScan.cpp\"\r\n#include \"tasks/moduleConnectionHandler.cpp\"\r\n#include \"tasks/knobHandler.cpp\"\r\n#include \"utils/initializeMatrix.h\"\r\n#include \"utils/initializeBLE.h\"\r\n\r\nvoid setup() {\r\n    Serial.begin(115200);\r\n    delay(2000); // Delay for the serial monitor to starts\r\n    Serial.println(String(OS_version) + \", \" + byCompany);\r\n    Serial.println(\"95YCH0DUCK\\n\");\r\n\r\n    // Initialize watchdog\r\n    esp_task_wdt_init(10, true);\r\n    \r\n    initializeBLE();\r\n    initializeMatrix();\r\n    \r\n    TaskHandle_t keyTaskHandle;\r\n    xTaskCreatePinnedToCore(\r\n        matrixScan,           // Task function: The function that will execute as the task.\r\n        \"Keystroke Handler\",  // Name of the task: A human-readable name for debugging.\r\n        8192,                 // Stack size: Amount of stack memory allocated to the task (in bytes).\r\n        NULL,        // Pass queue handle to task\r\n        3,                    // Priority: The priority of the task (higher values = higher priority).\r\n        &keyTaskHandle,       // Task handle: A pointer to store the task's handle (optional).\r\n        0                     // Core ID: The CPU core (0 or 1) on which the task will run.\r\n    );\r\n\r\n    TaskHandle_t knobTaskHandle;\r\n    xTaskCreatePinnedToCore(knobHandler, \"Knob Handler\", 2048, NULL, 1, &knobTaskHandle, 1);\r\n\r\n    TaskHandle_t bleTaskHandle;\r\n    xTaskCreatePinnedToCore(moduleConnectionHandler, \"BLE Handler\", 16384, NULL, 1, &bleTaskHandle, 1);\r\n\r\n    TaskHandle_t hostCommHandle;\r\n    xTaskCreatePinnedToCore(hostCommunicationBridge, \"Host Communication Bridge\", 4096, NULL, 2, &hostCommHandle, 0);\r\n}\r\n\r\nvoid loop() {\r\n    // not required due to the use of FreeRTOS tasks\r\n}"
        }
    ]
}