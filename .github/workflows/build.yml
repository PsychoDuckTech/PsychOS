name: ðŸš€ PsychOS CI/CD Pipeline

on:
  push:
    branches: [ main ]
    paths:
      - 'source/**'
      - 'platformio.ini'
  pull_request:
    paths:
      - 'source/**'
      - 'platformio.ini'

jobs:
  build-and-upload:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Extract Version from main.cpp
      id: extract_version
      run: |
        VERSION=$(grep -oP '(?<=const char \*OS_version = \")([^\"]+)' source/src/main.cpp)
        if [ -z "$VERSION" ]; then
          echo "::error::Version not found in main.cpp!"
          exit 1
        fi
        echo "version=$VERSION" >> "$GITHUB_OUTPUT"
        echo "Extracted version: $VERSION"

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install platformio

    - name: Cache PlatformIO
      uses: actions/cache@v3
      with:
        path: ~/.platformio
        key: ${{ runner.os }}-platformio-${{ hashFiles('source/platformio.ini') }}
        restore-keys: |
          ${{ runner.os }}-platformio-

    - name: Clean Build Directory
      run: platformio run --target clean
      working-directory: source

    - name: Build Firmware
      run: platformio run
      working-directory: source
      env:
        PLATFORMIO_FORCE_COLOR: true

    - name: Locate Firmware
      id: find_firmware
      run: |
        set -e
        FIRMWARE_PATH=$(find source/.pio/build -name 'firmware*.bin' -not -name '*bootloader*' -type f -print -quit)
        if [ -z "$FIRMWARE_PATH" ]; then
          echo "::error::Firmware binary not found in build artifacts!"
          exit 1
        fi
        FIRMWARE_NAME="psychos-${{ steps.extract_version.outputs.version }}.bin"
        mv "$FIRMWARE_PATH" "$FIRMWARE_NAME"
        echo "firmware_path=$FIRMWARE_NAME" >> "$GITHUB_OUTPUT"
        echo "firmware_name=$FIRMWARE_NAME" >> "$GITHUB_OUTPUT"
        echo "Found firmware: $FIRMWARE_NAME"

    - name: Upload Firmware Artifact
      uses: actions/upload-artifact@v4
      with:
        name: firmware-${{ steps.extract_version.outputs.version }}
        path: ${{ steps.find_firmware.outputs.firmware_path }}
